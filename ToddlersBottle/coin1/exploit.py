from pwn import *
import math

REAL_COIN = 10

def get_weight(args):
    cmd = ""
    for i in range(0, len(args)):
        cmd += str(args[i]) + " "

    r.sendline(cmd.encode())
    return r.recvline().decode('utf-8')

def send_coin(coin):
    r.sendline(str(coin[0]).encode())
    return r.recvline().decode('utf-8')


def find_counterfeit_coin(coins, attempts):
    number_of_coins = len(coins)

    if attempts > 0:
        left = coins[:int(math.ceil(number_of_coins/2))]
        right = coins[int(math.trunc(number_of_coins/2)):]

        try:
            left_w = get_weight(args=left)
            left_weight = int(left_w)
        except ValueError:
            print("[-] " + str(left_w))
            return
        attempts -= 1
        if left_weight % 10 == 0:
            attempts = find_counterfeit_coin(coins=right, attempts=attempts)
        else:
            attempts = find_counterfeit_coin(coins=left, attempts=attempts)
    else:
        print("[+] " + str(send_coin(coin=coins)))
        return
    

r = remote(host='pwnable.kr', port=9007, ssl=False)
print(r.recv().decode())

for i in range(0, 100):
    try:
        datas = str(r.recvline().decode('utf-8'))
    except EOFError:
        print("[-] EOFError :(")
        quit(1)
    datas = datas.split(" ")
    n = str(datas[0]).split("=")
    n = int(n[1])
    c = str(datas[1]).split("=")
    attempts = int(c[1])
    print("[+] Set parameters ->\t N=" + str(n) + " C=" + str(attempts))

    numbers = []
    for i in range(0, n):
        numbers.append(i + 1)
    
    find_counterfeit_coin(coins=numbers, attempts=attempts)


print(r.recv().decode('utf-8'))